on: [push, workflow_dispatch]
name: Linux_Container_Workflow

env:
  AWS_REGION: ap-northeast-2                   
  # ECR_REPOSITORY: aws-webapp
  IMAGE_PATH: Dockerfile
  ECR_REGISTRY: 022499044118.dkr.ecr.ap-northeast-2.amazonaws.com
  # IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: 022499044118.dkr.ecr.ap-northeast-2.amazonaws.com/aws-webapp:${{ github.sha }}
  API_URL: https://api-japac-ccr.xdr.jp.paloaltonetworks.com/public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64
  API_KEY: 32
  API_KEY_ID: LVrVqkkdnBjqxuhd8PlKoui1ISXLKkMfpmZFqvuWjQnvDQoM6wewi4nySjZl51U81fFeHBEyMqSvIvhNU7bYq6lyiMm7LnNVEe6V51GSuJamVt7m63ROZ4qh8NVnaTK0
jobs:
    build-and-scan-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Download CortexCLI from the CC Console # using CC Scan
          run: |
            curl -v "https://api-japac-ccr.xdr.jp.paloaltonetworks.com/public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64" \ -H "x-xdr-auth-id: 15" \ -H "Authorization: ${{env.API_KEY_ID}}" \ | jq -r ".signed_url"
            chmod +x cortexcli

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build and Scan the image
          # env:
          #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          #   IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $IMAGE_NAME .
            docker save $IMAGE_NAME > dockerimage.tar
            ./cortexcli --api-base-url ${{ env.API_URL }} --api-key ${{ env.API_KEY }} --xdr-api-id ${{ env.API_KEY_ID }} image scan dockerimage.tar
    
        - name: Push the image to Amazon ECR
          id: build-image
          run: |
            docker push $IMAGE_NAME

