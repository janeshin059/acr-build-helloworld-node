on: [push, workflow_dispatch]
name: Linux_Container_Workflow

env:
  IMAGE_NAME: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ github.repository }}:${{ github.sha }}
  IMAGE_PATH: Dockerfile

jobs:
    build-and-scan-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main

        - name: Download twistcli from the Prisma Cloud Compute Console # using Twistcli scan
          run: |
            curl --insecure --user ${{ secrets.PCC_USER }}:${{ secrets.PCC_PASS }} --output ./twistcli ${{ secrets.PCC_CONSOLE_URL }}/api/v1/util/twistcli
            chmod a+x ./twistcli


        - name: Build the image
          run: |
            docker build -t $IMAGE_NAME .
      
        - name: Scan the image
          run: ./twistcli images scan --address ${{ secrets.PCC_CONSOLE_URL }} --user ${{ secrets.PCC_USER }} --password ${{ secrets.PCC_PASS }} --details $IMAGE_NAME
        
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: 'Push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker push $IMAGE_NAME

        # - name: 'Deploy to Azure Container Instances'
        #   uses: 'azure/aci-deploy@v1'
        #   with:
        #     resource-group: ${{ secrets.RESOURCE_GROUP }} 
        #     dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        #     image: ${{ env.IMAGE_NAME }}
        #     registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        #     registry-username: ${{ secrets.REGISTRY_USERNAME }}
        #     registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        #     name: aci-sampleapp
        #     location: 'korea central'