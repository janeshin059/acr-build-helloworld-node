on: [push, workflow_dispatch]
name: Linux_Container_Workflow

env:
  AWS_REGION: ap-northeast-2                   
  # ECR_REPOSITORY: aws-webapp
  IMAGE_PATH: Dockerfile
  ECR_REGISTRY: 022499044118.dkr.ecr.ap-northeast-2.amazonaws.com
  # IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: 022499044118.dkr.ecr.ap-northeast-2.amazonaws.com/aws-webapp:${{ github.sha }}

jobs:
    build-and-scan-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Download twistcli from the Prisma Cloud Compute Console # using Twistcli scan
          run: |
          
            curl --insecure --user janeshin059@gmail.com:Paloalto1! --output ./twistcli https://app.sg.prismacloud.io/api/v1/util/twistcli
            chmod a+x ./twistcli

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build and Scan the image
          # env:
          #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          #   IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $IMAGE_NAME .
            ./twistcli images scan --address https://app.sg.prismacloud.io --user janeshin059@gmail.com --password Paloalto1! --details $IMAGE_NAME
        
        - name: Run Checkov action
          id: checkov
          uses: bridgecrewio/checkov-action@master
          with:
            quiet: true # optional: display only failed checks
            soft_fail: true # optional: do not return an error code if there are failed checks
            log_level: DEBUG # optional: set log level. Default WARNING
            docker_image: ${{ env.IMAGE_NAME }} # define the name of the image to scan
            dockerfile_path: Dockerfile # path to the Dockerfile
            # container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues
            api-key: ${{ secrets.BC_API_KEY }} # Bridgecrew API key stored as a GitHub secret
          env:
            PRISMA_API_URL: https://api.sg.prismacloud.io


        - name: Push the image to Amazon ECR
          id: build-image
          run: |
            docker push $IMAGE_NAME

          #test
