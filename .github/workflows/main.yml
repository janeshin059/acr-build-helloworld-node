on: [push, workflow_dispatch]
name: Linux_Container_Workflow

env:
  AWS_REGION: ap-northeast-2                   
  # ECR_REPOSITORY: aws-webapp
  IMAGE_PATH: Dockerfile
  ECR_REGISTRY: 022499044118.dkr.ecr.ap-northeast-2.amazonaws.com
  # IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: 022499044118.dkr.ecr.ap-northeast-2.amazonaws.com/aws-webapp:${{ github.sha }}

jobs:
    build-and-scan-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Download twistcli from the Prisma Cloud Compute Console # using Twistcli scan
          run: |
            curl --insecure --user ${{ secrets.PCC_USER }}:${{ secrets.PCC_PASS }} --output ./twistcli ${{ secrets.PCC_CONSOLE_URL }}/api/v1/util/twistcli
            chmod a+x ./twistcli

        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1

        - name: Build and Scan the image
          # env:
          #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          #   IMAGE_TAG: ${{ github.sha }}
          run: |
            docker build -t $IMAGE_NAME .
            ./twistcli images scan --address ${{ secrets.PCC_CONSOLE_URL }} --user ${{ secrets.PCC_USER }} --password ${{ secrets.PCC_PASS }} --details $IMAGE_NAME

        - name: Push the image to Amazon ECR
          id: build-image
          run: |
            docker push $IMAGE_NAME

